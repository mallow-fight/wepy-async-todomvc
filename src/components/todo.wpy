<style lang="less" scoped>
  @import '../theme.less';
  .todo {
    padding: @tiny;
    border: 1rpx solid @sky;
  }
  .inputThing {
    border: 1rpx solid @river;
  }
  .todoText, .todoEdit, .todoRemove, .inputThing, .addTodo, .todoComplete {
    .d-ib;
    .v-m;
  }
  .todoText {
    width: 45%;
  }
  .inputThing{
    width: 80%;
  }
  .todoList {
    display: block;
  }
  .todoInput{
    width: 100%;
  }
  .completeText{
    text-decoration: line-through;
    color: @river;
  }
  .editText{
    color: red;
  }
</style>
<template>
  <view class="todo">
    <view class="todoInput">
      <input class="inputThing" bindinput="inputTodoThing" placeholder="输入任务项" />
      <button class="addTodo" size="mini" type="primary" @tap="addTodo">添加</button>    
    </view>
    <view class="todoList">
      <repeat for="{{todos}}" key="index" index="index" item="todo">
          <input 
          type="text" 
          value="{{todo.title}}"
          bindinput="editTodoThing({{todo}})"
          class="{{todo.completed ? 'completeText' : ''}}" />
          <button size="mini" type="primary" class="todoComplete" @tap="toggleTodo({{todo}})">{{ todo.completed ? '已完成' : '未完成' }}</button>
          <button size="mini" type="warn" class="todoRemove" @tap="removeTodo({{todo.id}})">移除</button>
      </repeat>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import {
    connect,
    getStore
  } from 'wepy-redux'
  import {
    asyncGetTodoList,
    asyncAddTodo,
    asyncDeleteTodo,
    asyncUpdateTodo
  } from '../store/actions/todo.js'
  const store = getStore()
  // you can get state by store.getState() directly
  @connect({
    todos(state) {
      return state.todo.todos
    }
  }, {
    // actions bind, if has no arguments
  })
  export default class Todo extends wepy.component {
    data = {
      todoThing: {
        text: ''
      }
    }
    props = {
      todoIndex: {
        type: [Number],
        default: 0
      }
    }
    onLoad() {
      store.dispatch(asyncGetTodoList())
    }
    methods = {
      addTodo() {
        const title = this.todoThing.title
        if (!title || !title.length) {
          return wepy.showToast({
            icon: 'none',
            title: '输入不能为空!'
          })
        }
        store.dispatch(
          asyncAddTodo({
            title: this.todoThing.title,
            completed: false
          })
        )
        this.$apply()
      },
      removeTodo(id) {
        store.dispatch(asyncDeleteTodo({id}))
      },
      inputTodoThing(e) {
        this.todoThing.title = e.detail.value
      },
      editTodoThing(todo, e) {
        todo.title = e.detail.value
        store.dispatch(asyncUpdateTodo(todo))
      },
      toggleTodo(todo) {
        todo.completed = !todo.completed
        store.dispatch(asyncUpdateTodo(todo))
      }
    }
  }
</script>
